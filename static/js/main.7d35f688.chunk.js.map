{"version":3,"sources":["context/PlanetsContext.js","services/FetchPlanets.js","context/PlanetsProvider.js","components/Filters.js","components/Loading.js","components/Table.js","pages/Home.js","App.js","index.js"],"names":["PlanetsContext","createContext","fetchPlanets","a","fetch","response","json","data","FILTER_OPTIONS","INITAL_VALUES","column","comparison","value","INITAL_ORDER","sort","FILTER_ARRAY","PlanetsProvider","children","useState","setData","loading","setLoading","updateOptionsFilter","setUpdateOptionsFilter","filterByName","setfilterByName","filterByNumericValues","setFilterByNumericValues","numFilterArray","setNumFilterArray","activeFilters","setActiveFilters","numFilterHistory","setNumFilterHistory","columnsSort","setColumnsSort","initialData","setInitialData","initialRender","results","handleUpdateFilter","title","update","filter","item","active","prevState","contextValues","getPlanets","planetsResponse","handleFilterByName","event","target","getNameFiltered","searchName","toLowerCase","dataPlanet","nameFiltered","name","includes","length","handleFilterByNumeric","getNumericFiltered","lastItem","slice","byEquality","bySuperiority","Number","byInferiority","filterReset","preventDefault","activeFilterReset","option","newArray","final","handleUpdateList","handleGetNumericFilter","handleColumnsSort","getSortData","sortData","itemA","itemB","sortDesc","sortAsc","initialSortRender","newData","localeCompare","Provider","Filters","useContext","useEffect","className","data-testid","onChange","map","index","key","type","defaultValue","onClick","htmlFor","Loading","Table","nameFilterArray","planetList","scope","rotation_period","orbital_period","diameter","climate","gravity","terrain","surface_water","population","films","created","edited","url","Home","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7d35f688.chunk.js","sourcesContent":["import { createContext } from 'react';\n\nconst PlanetsContext = createContext();\n\nexport default PlanetsContext;\n","const fetchPlanets = async () => {\n  const url = 'https://swapi-trybe.herokuapp.com/api/planets/';\n  const response = await fetch(url);\n  const data = await response.json();\n  // console.log(data);\n  return data;\n};\n\nexport default fetchPlanets;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport PlanetsContext from './PlanetsContext';\nimport fetchPlanets from '../services/FetchPlanets';\n\nconst FILTER_OPTIONS = [\n  'population', 'orbital_period', 'diameter', 'surface_water', 'rotation_period',\n];\n\nconst INITAL_VALUES = {\n  column: 'population', comparison: 'maior que', value: '0',\n};\n\nconst INITAL_ORDER = { column: 'population', sort: 'ASC' };\n\nlet FILTER_ARRAY = [];\n\nfunction PlanetsProvider({ children }) {\n  const [data, setData] = useState({});\n  const [loading, setLoading] = useState();\n  const [updateOptionsFilter, setUpdateOptionsFilter] = useState(FILTER_OPTIONS);\n  const [filterByName, setfilterByName] = useState({});\n  const [filterByNumericValues, setFilterByNumericValues] = useState(INITAL_VALUES);\n  const [numFilterArray, setNumFilterArray] = useState();\n  const [activeFilters, setActiveFilters] = useState([]);\n  const [numFilterHistory, setNumFilterHistory] = useState([]);\n  const [columnsSort, setColumnsSort] = useState(INITAL_ORDER);\n  const [initialData, setInitialData] = useState();\n\n  const getPlanets = async () => {\n    setLoading(true);\n    const planetsResponse = await fetchPlanets();\n    setData(planetsResponse);\n    setLoading(false);\n  };\n\n  const initialRender = () => {\n    const { results } = data;\n    if (numFilterArray) {\n      setNumFilterArray(numFilterArray);\n    } else {\n      setNumFilterArray(results);\n    }\n    setNumFilterArray(results);\n  };\n\n  const initialSortRender = () => {\n    const { results } = data;\n    const newData = numFilterArray || results;\n    const sortData = newData?.sort(\n      (itemA, itemB) => itemA.name.localeCompare(itemB.name),\n    );\n    setInitialData(sortData);\n  };\n\n  const handleFilterByName = (event) => {\n    const { value } = event.target;\n    setfilterByName({ value });\n    initialRender();\n  };\n\n  const getNameFiltered = () => {\n    const searchName = filterByName.value?.toLowerCase();\n    const { results } = data;\n    const dataPlanet = numFilterArray || results;\n    const nameFiltered = dataPlanet?.filter(\n      (item) => item.name.toLowerCase().includes(searchName),\n    );\n    if (nameFiltered) { setNumFilterArray([...nameFiltered]); }\n    const planet = nameFiltered?.length > 0 ? nameFiltered : results;\n    return planet;\n  };\n\n  const handleFilterByNumeric = (event) => {\n    const { name, value } = event.target;\n    setFilterByNumericValues({ ...filterByNumericValues, [name]: value });\n  };\n\n  const handleUpdateFilter = (title) => {\n    const update = updateOptionsFilter.filter((item) => item !== title);\n    const active = updateOptionsFilter.filter((item) => item === title);\n    setUpdateOptionsFilter([...update]);\n    setActiveFilters((prevState) => [...prevState, ...active]);\n  };\n\n  const handleGetNumericFilter = () => {\n    setNumFilterHistory((prevState) => [...prevState, filterByNumericValues]);\n  };\n\n  const handleUpdateList = () => {\n    const { results } = data;\n    const newArray = FILTER_ARRAY;\n    const lastItem = newArray[newArray.length - 1];\n    const final = lastItem ? newArray[newArray.length - 1] : {};\n    const { column, comparison, value } = final;\n    if (newArray.length > 0) {\n      const byEquality = results?.filter((item) => item[column] === value);\n      const bySuperiority = results?.filter((item) => item[column] > Number(value));\n      const byInferiority = results?.filter((item) => item[column] < Number(value));\n\n      if (comparison === 'menor que') { setNumFilterArray([...byInferiority]); }\n      if (comparison === 'maior que') { setNumFilterArray([...bySuperiority]); }\n      if (comparison === 'igual a') { setNumFilterArray([...byEquality]); }\n    } else {\n      setNumFilterArray([...results]);\n    }\n    handleUpdateFilter(column);\n  };\n\n  const getNumericFiltered = () => {\n    const { results } = data;\n    const dataPlanet = numFilterArray || results;\n    FILTER_ARRAY = [...numFilterHistory, filterByNumericValues];\n    FILTER_ARRAY = FILTER_ARRAY.slice(1);\n    const lastItem = FILTER_ARRAY[FILTER_ARRAY.length - 1];\n    const { column, comparison, value } = lastItem;\n\n    const byEquality = dataPlanet?.filter((item) => item[column] === value);\n    const bySuperiority = dataPlanet?.filter((item) => item[column] > Number(value));\n    const byInferiority = dataPlanet?.filter((item) => item[column] < Number(value));\n\n    if (comparison === 'menor que') { setNumFilterArray([...byInferiority]); }\n    if (comparison === 'maior que') { setNumFilterArray([...bySuperiority]); }\n    if (comparison === 'igual a') { setNumFilterArray([...byEquality]); }\n\n    handleUpdateFilter(column);\n  };\n\n  const activeFilterReset = (event) => {\n    const { name } = event.target;\n    const active = activeFilters.length !== 1\n      ? activeFilters.filter((item) => item !== name)\n      : [];\n\n    const option = activeFilters.length !== 1\n      ? activeFilters.filter((item) => item === name)\n      : [name];\n\n    setActiveFilters(() => [...active]);\n    FILTER_ARRAY = FILTER_ARRAY.filter((item) => item.column !== name);\n    handleUpdateList();\n    setUpdateOptionsFilter([...updateOptionsFilter, ...option]);\n    setFilterByNumericValues([]);\n  };\n\n  const filterReset = (event) => {\n    event.preventDefault();\n    setNumFilterArray();\n    setUpdateOptionsFilter([\n      'population', 'orbital_period', 'diameter', 'surface_water', 'rotation_period',\n    ]);\n  };\n\n  const handleColumnsSort = (event) => {\n    const { name, value } = event.target;\n    setColumnsSort({ ...columnsSort, [name]: value });\n  };\n\n  const sortAsc = (itemA, itemB) => {\n    if (itemA === 'unknown') { return 1; }\n    if (itemB === 'unknown') { return Number('-1'); }\n    return itemA - itemB;\n  };\n\n  const sortDesc = (itemA, itemB) => {\n    if (itemB === 'unknown') { return Number('-1'); }\n    return itemB - itemA;\n  };\n\n  const getSortData = () => {\n    const { results } = data;\n    const { column, sort } = columnsSort;\n    const newData = numFilterArray || results;\n    const sortData = newData.sort((itemA, itemB) => {\n      if (sort === 'DESC') { return sortDesc(itemA[column], itemB[column]); }\n      return sortAsc(itemA[column], itemB[column]);\n    });\n    setNumFilterArray([...sortData]);\n  };\n\n  const contextValues = {\n    data,\n    loading,\n    getPlanets,\n    filterByName,\n    handleFilterByName,\n    getNameFiltered,\n    filterByNumericValues,\n    handleFilterByNumeric,\n    getNumericFiltered,\n    numFilterArray,\n    initialRender,\n    updateOptionsFilter,\n    filterReset,\n    activeFilters,\n    activeFilterReset,\n    handleGetNumericFilter,\n    handleColumnsSort,\n    columnsSort,\n    FILTER_OPTIONS,\n    getSortData,\n    initialData,\n    initialSortRender,\n  };\n\n  return (\n    <PlanetsContext.Provider value={ contextValues }>\n      { children }\n    </PlanetsContext.Provider>\n  );\n}\n\nPlanetsProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default PlanetsProvider;\n","import React, { useContext, useEffect } from 'react';\nimport PlanetsContext from '../context/PlanetsContext';\n\nfunction Filters() {\n  const {\n    filterByName,\n    handleFilterByName,\n    handleFilterByNumeric,\n    getNumericFiltered,\n    updateOptionsFilter,\n    activeFilters,\n    filterReset,\n    activeFilterReset,\n    numFilterArray,\n    handleGetNumericFilter,\n    handleColumnsSort,\n    FILTER_OPTIONS,\n    getSortData,\n  } = useContext(PlanetsContext);\n\n  // const FILTER_OPTIONS = [\n  //   'population', 'orbital_period', 'diameter', 'surface_water', 'rotation_period',\n  // ];\n\n  useEffect(() => { handleGetNumericFilter(); }, [numFilterArray]);\n\n  return (\n    <section className=\"filters\">\n      <div className=\"name-filter\">\n        <input\n          data-testid=\"name-filter\"\n          value={ filterByName.value }\n          onChange={ handleFilterByName }\n        />\n      </div>\n      <div className=\"comparison-filter\">\n        <select\n          name=\"column\"\n          data-testid=\"column-filter\"\n          onChange={ handleFilterByNumeric }\n        >\n          {updateOptionsFilter.map((item, index) => (\n            <option key={ index } value={ item }>{ item }</option>\n          ))}\n        </select>\n        <select\n          name=\"comparison\"\n          data-testid=\"comparison-filter\"\n          onChange={ handleFilterByNumeric }\n        >\n          <option>maior que</option>\n          <option>menor que</option>\n          <option>igual a</option>\n        </select>\n        <input\n          type=\"number\"\n          name=\"value\"\n          defaultValue=\"0\"\n          data-testid=\"value-filter\"\n          onChange={ handleFilterByNumeric }\n        />\n        <button\n          type=\"button\"\n          data-testid=\"button-filter\"\n          onClick={ getNumericFiltered }\n        >\n          FILTRAR\n        </button>\n        <button\n          type=\"button\"\n          onClick={ filterReset }\n          data-testid=\"button-remove-filters\"\n        >\n          REMOVER FILTROS\n        </button>\n      </div>\n      <div className=\"columns-sort\">\n        <select\n          name=\"column\"\n          data-testid=\"column-sort\"\n          onChange={ handleColumnsSort }\n        >\n          {FILTER_OPTIONS.map((item, index) => (\n            <option key={ index } value={ item }>{ item }</option>\n          ))}\n        </select>\n        <label htmlFor=\"column-sort-input-asc\">\n          Ascendente\n          <input\n            type=\"radio\"\n            data-testid=\"column-sort-input-asc\"\n            name=\"sort\"\n            value=\"ASC\"\n            onChange={ handleColumnsSort }\n          />\n        </label>\n        <label htmlFor=\"column-sort-input-desc\">\n          Descendente\n          <input\n            type=\"radio\"\n            data-testid=\"column-sort-input-desc\"\n            name=\"sort\"\n            value=\"DESC\"\n            onChange={ handleColumnsSort }\n          />\n        </label>\n        <button\n          type=\"button\"\n          data-testid=\"column-sort-button\"\n          onClick={ getSortData }\n        >\n          Ordenar\n        </button>\n      </div>\n      <div className=\"active-filters\">\n        {activeFilters?.map((item, index) => (\n          <div key={ index } data-testid=\"filter\">\n            <button\n              type=\"button\"\n              name={ item }\n              onClick={ activeFilterReset }\n            >\n              {item}\n              X\n            </button>\n          </div>))}\n      </div>\n    </section>\n  );\n}\n\nexport default Filters;\n","import React from 'react';\n\nfunction Loading() {\n  return (\n    <span>Carregando...</span>\n  );\n}\n\nexport default Loading;\n","import React, { useContext, useEffect } from 'react';\nimport PlanetsContext from '../context/PlanetsContext';\nimport Loading from './Loading';\n\nfunction Table() {\n  const {\n    data,\n    getPlanets,\n    loading,\n    filterByName,\n    getNameFiltered,\n    numFilterArray,\n    nameFilterArray,\n    initialSortRender,\n    initialData,\n  } = useContext(PlanetsContext);\n\n  useEffect(() => { getPlanets(); }, []);\n  useEffect(() => { initialSortRender(); }, [data]);\n  useEffect(() => { getNameFiltered(); }, [filterByName]);\n\n  const TABLE_TITLE = [\n    'Name', 'Rotation Period', 'Orbital Period', 'Diameter',\n    'Climate', 'Gravity', 'Terrain', 'Surface Water', 'Population',\n    'Films', 'Created', 'Edited', 'URL',\n  ];\n\n  const planetList = nameFilterArray || numFilterArray || initialData;\n\n  return (\n    loading ? <Loading /> : (\n      <div className=\"table-responsive\">\n        <table className=\"table table-dark align-middle table-hover\">\n          <thead>\n            <tr>\n              {TABLE_TITLE.map((item, index) => (\n                <th scope=\"col\" key={ index }>{item}</th>\n              ))}\n            </tr>\n          </thead>\n          <tbody>\n            {\n              planetList?.map((item, index) => (\n                <tr key={ index }>\n                  <td data-testid=\"planet-name\">{ item.name }</td>\n                  <td>{ item.rotation_period }</td>\n                  <td>{ item.orbital_period }</td>\n                  <td>{ item.diameter}</td>\n                  <td>{ item.climate }</td>\n                  <td>{ item.gravity }</td>\n                  <td>{ item.terrain }</td>\n                  <td>{ item.surface_water }</td>\n                  <td>{ item.population }</td>\n                  <td>{ item.films }</td>\n                  <td>{ item.created }</td>\n                  <td>{ item.edited }</td>\n                  <td>{ item.url }</td>\n                </tr>\n              ))\n            }\n          </tbody>\n        </table>\n      </div>\n    )\n  );\n}\n\nexport default Table;\n","import React from 'react';\nimport Filters from '../components/Filters';\nimport Table from '../components/Table';\n\nfunction Home() {\n  return (\n    <div className=\"container py-3\">\n      <Filters />\n      <Table />\n    </div>\n  );\n}\n\nexport default Home;\n","import React from 'react';\nimport './App.css';\nimport PlanetsProvider from './context/PlanetsProvider';\nimport Home from './pages/Home';\n\nfunction App() {\n  return (\n    <PlanetsProvider>\n      <Home />\n    </PlanetsProvider>\n\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}